List Interface:
- An ordered collection also know as sequence.
- Allow duplicates
- Not Fixed in size like arrays
- Fast for data retrivals
- Various implementations
    - ArrayList
    - Stack
    - Vector
    - Other

-------------------------

Stack:
- The Stack class represents a LIFO stack of objects.
- It extends class Vector with five operations that allow a vector to be treated a stack.
        - The usual "push" and "pop" operations were provided, as well as method to "peek" at top item on stack.
        - a method to test whether stack is empty and a method to search the stack for an item and discover how far it is from the top.

-------------------------

Queue:
- DataStructure works on basis of first in first out principle.
- A collection designed for holding elements prior to processing.
- It is an interface and popular implementation is LinkedList.

-------------------------

Linkedlist or Doubly linked list: (https://www.baeldung.com/java-linkedlist)
- It same as queue but each element has reference to its previous and next element.
- previous reference of first element and next reference of last element will be null.
- because of these references linked list is bit expensive for memory.
- its not synchronized
- Its Iterator and ListIterator iterators are fail-fast (which means that after the iterator's creation, if the list is modified, a ConcurrentModificationException will be thrown)
- Although LinkedList is not synchronized, we can retrieve a synchronized version of it by calling the Collections.synchronizedList method, like:
- full documentation